Name:          binary-protocol-zmq
Version:       0.2
Stability:     Experimental

Synopsis:      Monad to ease implementing a binary network protocol over ZeroMQ
Description:
 The monad provided in this package provides an easy way to implement servers
 and clients which exchange messages (types which are instances of
 @Data.Binary.Binary@) over ZeroMQ sockets.
 .
 This is heavily based on the @Control.Monad.BinaryProtocol@ package by Gregory
 Crosswhite.
Category:      Data, Network

Author:        Nicolas Trangez
Copyright:     (c) 2010 Nicolas Trangez
Maintainer:    Nicolas Trangez <eikke@eikke.com>
Homepage:      http://github.com/NicolasT/binary-protocol-zmq

License:       BSD3
License-File:  LICENSE

Cabal-Version: >= 1.6
Build-Type:    Simple

Extra-Source-Files:
  README.rst

Source-Repository head
  Type:     git
  Location: git://github.com/NicolasT/binary-protocol-zmq.git
  branch:   master

Flag tests
  Description: Build the tests
  Default:     False

Flag optimize
  Description: Enable optimizations for the library
  Default:     True

Library
  Build-Depends:
    base >=4 && < 5,
    binary,
    bytestring,
    mtl,
    zeromq-haskell

  Exposed-Modules:
    Control.Monad.BinaryProtocol.ZMQ

  Hs-Source-Dirs: .

  GHC-Options:    -Wall -fno-warn-unused-binds
  if flag(optimize)
    GHC-Options:  -funbox-strict-fields -O2 -fspec-constr -fdicts-cheap

Executable test-binary-protocol-zmq
  Main-Is:     Test.hs

  if !flag(tests)
    Buildable: False
  else
    Build-Depends:
      base >= 4 && < 5,
      test-framework,
      test-framework-hunit,
      HUnit

    Other-Modules:
      Control.Monad.BinaryProtocol.ZMQ

    GHC-Options:   -Wall -fno-warn-unused-binds -threaded
    if flag(optimize)
      GHC-Options: -funbox-strict-fields -O2 -fspec-constr -fdicts-cheap
